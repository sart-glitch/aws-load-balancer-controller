apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig":
      { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-south-1:----------------:certificate/------------------
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "15"
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: 'ip'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/success-codes: "200"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "2"    
    alb.ingress.kubernetes.io/subnets: subnet-c31466,subnet-d8583e9,subnet-f3fb7347 #specify public subnets
    #alb.ingress.kubernetes.io/group.name: my-team   #when you same loadbalancer for multiple ingress
  name: prod-test-ingress
  namespace: prod-app
spec:
  ingressClassName: alb
  rules:
  - host: testr.sarthusofts.shop
    http:
      paths:
      - backend:
          service:
            name: sample-svc
            port:
              number: 80
        path: /
        pathType: Prefix
